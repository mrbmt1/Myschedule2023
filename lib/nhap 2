void _saveTodo() async {
  if (_content != null) {
    TodoItem newTodo = TodoItem(
      id: '1',
      content: _content!,
    );
    newTodo.date = _selectedDate;
    newTodo.time = _selectedTime;
    newTodo.timeNotification = _selectedTimeNotification;
    newTodo.isNotification = _isNotification;

    User? currentUser = FirebaseAuth.instance.currentUser;
    if (currentUser != null) {
      await FirebaseFirestore.instance.collection('tasks').add({
        'userID': currentUser.uid,
        'completed': false,
        'createdAt': DateTime.now(),
        'dueDate': newTodo.date,
        'description': newTodo.content,
        'timeOfDueDay': "${newTodo.time!.hour}:${newTodo.time!.minute}",
        'isNotification': newTodo.isNotification,
        'timeNotification':
            "${newTodo.timeNotification!.hour}:${newTodo.timeNotification!.minute}",
      });

      if (newTodo.isNotification) {
        // Lấy múi giờ hiện tại
        tz.initializeTimeZones();
        final String timeZoneName = await FlutterNativeTimezone.getLocalTimezone();
        final timeZone = tz.getLocation(timeZoneName);

        // Đặt lịch hiển thị thông báo
        await flutterLocalNotificationsPlugin.zonedSchedule(
          0,
          'Thông báo task',
          'Bạn có một task cần hoàn thành!',
          tz.TZDateTime(
            timeZone,
            newTodo.date.year,
            newTodo.date.month,
            newTodo.date.day,
            newTodo.timeNotification!.hour,
            newTodo.timeNotification!.minute,
          ),
          const NotificationDetails(
            android: AndroidNotificationDetails(
              'channel_id',
              'channel_name',
              'channel_description',
              importance: Importance.high,
              priority: Priority.high,
            ),
          ),
          androidAllowWhileIdle: true,
          uiLocalNotificationDateInterpretation:
              UILocalNotificationDateInterpretation.absoluteTime,
        );
      }
    }
    Navigator.push(
      context,
      MaterialPageRoute(builder: (_) => TodoListScreen()),
    );
  }
}
